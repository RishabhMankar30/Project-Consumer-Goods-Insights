1) Provide the list of markets in which customer "Atliq Exclusive" operates its
   business in the APAC region.
Query:
SELECT DISTINCT
    (MARKET)
FROM
    dim_customer
WHERE
    customer = 'Atliq Exclusive'
        AND region = 'APAC';
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2) What is the percentage of unique product increase in 2021 vs. 2020? The
   final output contains these fields,
   unique_products_2020
  unique_products_2021
  percentage_chg

Query:

with products_in_2020 as
	(select count(distinct(product_code)) as unique_products_2020,fiscal_year  from fact_sales_monthly
	where fiscal_year=2020),
 products_in_2021 as 
	(select count(distinct(product_code)) as unique_products_2021,fiscal_year  from fact_sales_monthly
	where fiscal_year=2021)
select unique_products_2020,unique_products_2021, round((unique_products_2021-unique_products_2020)*100/unique_products_2021,2) as pct_change
from products_in_2020, products_in_2021;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) Provide a report with all the unique product counts for each segment and
   sort them in descending order of product counts. The final output contains
  2 fields,
  segment
  product_count

Query:

SELECT 
    segment, COUNT(DISTINCT (product_code)) AS product_count
FROM
    dim_product
GROUP BY segment
ORDER BY product_count DESC;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4) Follow-up: Which segment had the most increase in unique products in
    2021 vs 2020? The final output contains these fields,
   segment
   product_count_2020
   product_count_2021
  difference

Query:

with product_2020 as
	(select segment,count(distinct(p.product_code)) as  product_count_2020, s.fiscal_year 
    from dim_product p
   	inner join fact_sales_monthly  s
   	on s.product_code=p.product_code
   	where fiscal_year=2020
   	group by segment),
product_2021 as
	(select segment,count(distinct(p.product_code)) as  product_count_2021, s.fiscal_year from dim_product p
	inner join fact_sales_monthly  s
	on s.product_code=p.product_code
	where fiscal_year=2021
	group by segment)
select p20.segment, p20.product_count_2020,p21.product_count_2021,(p21.product_count_2021-p20.product_count_2020) as difference
 from product_2020 p20
inner join product_2021 p21
on p21.segment=p20.segment;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5) Get the products that have the highest and lowest manufacturing costs.
   The final output should contain these fields,
   product_code
   product
   manufacturing_cost

Query:

SELECT 
    m.product_code, p.product, m.manufacturing_cost
FROM
    fact_manufacturing_cost m
        INNER JOIN
    dim_product p ON p.product_code = m.product_code
WHERE
    m.manufacturing_cost IN ((SELECT 
            MAX(manufacturing_cost)
        FROM
            fact_manufacturing_cost) , (SELECT 
                MIN(manufacturing_cost)
            FROM
                fact_manufacturing_cost));

-------> to get total sold_quantity and its gross sales price of the maximum and minimum product:-
SELECT 
    m.product_code,
    m.product,
    m.manufacturing_cost,
    SUM(sold_quantity),
    g.gross_price,
    SUM(s.sold_quantity * g.gross_price) AS gross_sales_price
FROM
    max_min m
        INNER JOIN
    fact_sales_monthly s ON s.product_code = m.product_code
        INNER JOIN
    fact_gross_price g ON g.product_code = m.product_code
GROUP BY m.product , m.product_code;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6) Generate a report which contains the top 5 customers who received an
   average high pre_invoice_discount_pct for the fiscal year 2021 and in the
   Indian market. The final output contains these fields,
   customer_code
   customer
   average_discount_percentage

Query:

SELECT 
    d.customer_code,
    c.customer,
    ROUND(AVG(d.pre_invoice_discount_pct), 2) AS average_discount_percentage
FROM
    fact_pre_invoice_deductions d
        INNER JOIN
    dim_customer c ON c.customer_code = d.customer_code
WHERE
    c.market = 'India'
        AND d.fiscal_year = 2021
GROUP BY d.customer_code , c.customer
ORDER BY average_discount_percentage DESC
LIMIT 5;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7) Get the complete report of the Gross sales amount for the customer “Atliq
    Exclusive” for each month. This analysis helps to get an idea of low and
   high-performing months and take strategic decisions.
   The final report contains these columns:
   Month
   Year
  Gross sales Amount

Query:

with gross_sales as(
    select c.customer,month(s.date) as date_month ,s.sold_quantity,s.fiscal_year,g.gross_price from dim_customer c
	inner join fact_sales_monthly s
	on s.customer_code=c.customer_code
	inner join fact_gross_price g
	on g.product_code= s.product_code
	where c.customer="Atliq Exclusive")
select customer, date_month,fiscal_year, round(sum(sold_quantity*gross_price),2) as Gross_sales_Amount from gross_sales
group by date_month, fiscal_year;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8) In which quarter of 2020, got the maximum total_sold_quantity? The final
    output contains these fields sorted by the total_sold_quantity,
   Quarter
   total_sold_quantity

Query:

with quartly_sold_quantity as (
	select *, 
	case
		when month(date) in (9,10,11) then "1st_quarter"
    		when month(date) in (12,1,2) then "2nd_quarter"
    		when month(date) in (3,4,5) then "3rd_quarter"
    		when month(date) in (6,7,8) then "4th_quarter"
               end as "Quarter"
             from fact_sales_monthly
    where fiscal_year=2020)
select `Quarter`, sum(sold_quantity) as total_sold_quatity from quartly_sold_quantity
group by `Quarter`
order by total_sold_quatity desc;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9) Which channel helped to bring more gross sales in the fiscal year 2021
    and the percentage of contribution? The final output contains these fields,
   channel
   gross_sales_mln
  percentage

Query:

with gross_sales_2021 as(
	select c.`channel`,round(sum(s.sold_quantity*g.gross_price)/1000000,2) as gross_sales_mln
	from dim_customer c
		inner join fact_sales_monthly s
		on s.customer_code=c.customer_code
		inner join fact_gross_price g
		on g.product_code= s.product_code
	where s.fiscal_year=2021
	group by c.channel)
select *, gross_sales_mln*100/sum(gross_sales_mln) over() as percentage_of_contribution
from gross_sales_2021
order by gross_sales_mln desc
limit 1;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10)Get the Top 3 products in each division that have a high
     total_sold_quantity in the fiscal_year 2021? The final output contains these
    fields,
   division
   product_code
   codebasics.io
  product
  total_sold_quantity
  rank_order

Query:


 create temporary table  Top_3_products_each_division_with_higest_sold_quantity
with each_product_total_sales as (
select p.division,p.product_code,p.product,p.variant, sum(s.sold_quantity) as total_sold_quantity
from dim_product p 
inner join fact_sales_monthly s
on p.product_code=s.product_code
where s.fiscal_year=2021
group by p.product_code,p.product)
select *, dense_rank() over(partition by division order by total_sold_quantity desc) as rank_order from each_product_total_sales;

SELECT 
    *
FROM
    Top_3_products_each_division_with_higest_sold_quantity
WHERE
    rank_order <= 3;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



